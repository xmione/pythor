{"instruction": "How to use urlopen() to fetch a web page in Python?", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines.", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter.", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python?", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup?", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 1)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 1)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 1)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 1)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 1)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 2)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 2)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 2)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 2)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 2)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 3)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 3)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 3)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 3)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 3)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 4)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 4)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 4)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 4)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 4)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 5)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 5)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 5)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 5)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 5)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 6)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 6)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 6)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 6)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 6)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 7)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 7)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 7)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 7)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 7)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 8)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 8)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 8)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 8)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 8)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 9)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 9)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 9)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 9)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 9)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 10)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 10)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 10)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 10)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 10)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 11)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 11)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 11)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 11)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 11)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 12)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 12)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 12)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 12)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 12)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 13)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 13)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 13)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 13)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 13)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 14)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 14)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 14)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 14)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 14)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 15)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 15)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 15)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 15)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 15)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 16)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 16)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 16)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 16)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 16)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 17)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 17)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 17)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 17)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 17)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 18)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 18)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 18)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 18)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 18)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 19)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 19)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 19)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 19)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 19)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "How to use urlopen() to fetch a web page in Python? (Example 20)", "code": "from urllib.request import urlopen\n\nurl = 'https://example.com'\nresponse = urlopen(url)\nhtml = response.read().decode('utf-8')\nprint(html)"}
{"instruction": "Write a Python function that reads a text file and returns the number of lines. (Example 20)", "code": "def count_lines(filepath):\n    with open(filepath, 'r') as file:\n        return len(file.readlines())"}
{"instruction": "Create a Python class called `Rectangle` that calculates area and perimeter. (Example 20)", "code": "class Rectangle:\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)"}
{"instruction": "How to handle ZeroDivisionError in Python? (Example 20)", "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError as e:\n    print(f\"Cannot divide by zero: {e}\")"}
{"instruction": "How to parse HTML and extract all text using BeautifulSoup? (Example 20)", "code": "from bs4 import BeautifulSoup\n\ndef extract_text(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    return soup.get_text(separator=' ', strip=True)"}
{"instruction": "Write a Python decorator that retries a function up to 3 times if it raises a specific exception, and logs each retry", "code": "import functools\r\nimport time\r\nimport logging\r\n\r\n# Set up a basic logger\r\nlogging.basicConfig(filename=\"retry_log.txt\", level=logging.INFO)\r\n\r\ndef retry_on_exception(exception_type, retries=3, delay=1):\r\n    def decorator(func):\r\n        @functools.wraps(func)\r\n        def wrapper(*args, **kwargs):\r\n            for attempt in range(1, retries + 1):\r\n                try:\r\n                    return func(*args, **kwargs)\r\n                except exception_type as e:\r\n                    logging.info(f\"Attempt {attempt} failed: {e}\")\r\n                    if attempt == retries:\r\n                        raise\r\n                    time.sleep(delay)\r\n        return wrapper\r\n    return decorator\r\n\r\n# Example usage\r\n@retry_on_exception(ValueError, retries=3)\r\ndef might_fail():\r\n    print(\"Trying something risky...\")\r\n    raise ValueError(\"Oops!\")\r\n\r\nif __name__ == \"__main__\":\r\n    try:\r\n        might_fail()\r\n    except ValueError as e:\r\n        print(f\"Final failure: {e}\")"}
